[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kubenumerate"
dynamic = ["version"]
description = "A comprehensive Kubernetes security auditing tool"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Subtle", email = "5ubt13@protonmail.com"}
]
maintainers = [
    {name = "Subtle", email = "5ubt13@protonmail.com"}
]
keywords = ["kubernetes", "security", "audit", "compliance", "cis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.12"
dependencies = [
    "pandas>=1.5.0",
    "requests>=2.28.0",
    "PyYAML>=6.0",
    "packaging>=21.0",
    "openpyxl>=3.0.0",
    "xlrd>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "flake8>=5.0.0",
    "black>=22.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/0x5ubt13/kubenumerate"
Documentation = "https://github.com/0x5ubt13/kubenumerate#readme"
Repository = "https://github.com/0x5ubt13/kubenumerate"
"Bug Tracker" = "https://github.com/0x5ubt13/kubenumerate/issues"

[project.scripts]
kubenumerate = "kubenumerate:main"

[tool.setuptools.dynamic]
version = {attr = "version.get_version"}

[tool.setuptools.packages.find]
include = ["kubenumerate", "ExtensiveRoleCheck", "formatter", "version"]

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 120
extend-ignore = ["E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=kubenumerate",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["kubenumerate", "ExtensiveRoleCheck", "formatter", "version"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 